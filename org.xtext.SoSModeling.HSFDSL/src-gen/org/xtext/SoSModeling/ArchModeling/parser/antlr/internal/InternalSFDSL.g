/*
 * generated by Xtext 2.19.0
 */
grammar InternalSFDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.sosModeling.archModeling.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.sosModeling.archModeling.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.sosModeling.archModeling.services.SFDSLGrammarAccess;

}

@parser::members {

 	private SFDSLGrammarAccess grammarAccess;

    public InternalSFDSLParser(TokenStream input, SFDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "StochasticModeling";
   	}

   	@Override
   	protected SFDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleStochasticModeling
entryRuleStochasticModeling returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStochasticModelingRule()); }
	iv_ruleStochasticModeling=ruleStochasticModeling
	{ $current=$iv_ruleStochasticModeling.current; }
	EOF;

// Rule StochasticModeling
ruleStochasticModeling returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getStochasticModelingAccess().getStochasticModelElementsModelElementsDecarationParserRuleCall_0());
			}
			lv_StochasticModelElements_0_0=ruleModelElementsDecaration
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getStochasticModelingRule());
				}
				add(
					$current,
					"StochasticModelElements",
					lv_StochasticModelElements_0_0,
					"org.xtext.sosModeling.archModeling.SFDSL.ModelElementsDecaration");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleModelElementsDecaration
entryRuleModelElementsDecaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelElementsDecarationRule()); }
	iv_ruleModelElementsDecaration=ruleModelElementsDecaration
	{ $current=$iv_ruleModelElementsDecaration.current; }
	EOF;

// Rule ModelElementsDecaration
ruleModelElementsDecaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelElementsDecarationAccess().getModelElementsDecarationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelElementsDecarationAccess().getAbstractArchModelAbsArchDeclParserRuleCall_1_0());
				}
				lv_AbstractArchModel_1_0=ruleAbsArchDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelElementsDecarationRule());
					}
					add(
						$current,
						"AbstractArchModel",
						lv_AbstractArchModel_1_0,
						"org.xtext.sosModeling.archModeling.SFDSL.AbsArchDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelElementsDecarationAccess().getConstiuenetSystemSDesignCSDeclParserRuleCall_2_0());
				}
				lv_ConstiuenetSystemSDesign_2_0=ruleCSDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelElementsDecarationRule());
					}
					add(
						$current,
						"ConstiuenetSystemSDesign",
						lv_ConstiuenetSystemSDesign_2_0,
						"org.xtext.sosModeling.archModeling.SFDSL.CSDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelElementsDecarationAccess().getMediatorDesignMedDeclParserRuleCall_3_0());
				}
				lv_MediatorDesign_3_0=ruleMedDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelElementsDecarationRule());
					}
					add(
						$current,
						"MediatorDesign",
						lv_MediatorDesign_3_0,
						"org.xtext.sosModeling.archModeling.SFDSL.MedDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelElementsDecarationAccess().getConcurrentConstraintsCConsDeclParserRuleCall_4_0());
				}
				lv_ConcurrentConstraints_4_0=ruleCConsDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelElementsDecarationRule());
					}
					add(
						$current,
						"ConcurrentConstraints",
						lv_ConcurrentConstraints_4_0,
						"org.xtext.sosModeling.archModeling.SFDSL.CConsDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelElementsDecarationAccess().getArchitecutreElementsBehaviorsAElementsBehaviorRoutinesParserRuleCall_5_0());
				}
				lv_ArchitecutreElementsBehaviors_5_0=ruleAElementsBehaviorRoutines
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelElementsDecarationRule());
					}
					add(
						$current,
						"ArchitecutreElementsBehaviors",
						lv_ArchitecutreElementsBehaviors_5_0,
						"org.xtext.sosModeling.archModeling.SFDSL.AElementsBehaviorRoutines");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='ModelElements'
		{
			newLeafNode(otherlv_6, grammarAccess.getModelElementsDecarationAccess().getModelElementsKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelElementsDecarationAccess().getNameQualifiedNameParserRuleCall_7_0());
				}
				lv_name_7_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelElementsDecarationRule());
					}
					set(
						$current,
						"name",
						lv_name_7_0,
						"org.xtext.sosModeling.archModeling.SFDSL.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelElementsDecarationAccess().getInterfcePublicinterfaeceDefParserRuleCall_8_0());
				}
				lv_Interfce_8_0=rulepublicinterfaeceDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelElementsDecarationRule());
					}
					add(
						$current,
						"Interfce",
						lv_Interfce_8_0,
						"org.xtext.sosModeling.archModeling.SFDSL.publicinterfaeceDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelElementsDecarationAccess().getArchTraitsTraitDeclarationParserRuleCall_9_0());
				}
				lv_ArchTraits_9_0=ruletraitDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelElementsDecarationRule());
					}
					add(
						$current,
						"ArchTraits",
						lv_ArchTraits_9_0,
						"org.xtext.sosModeling.archModeling.SFDSL.traitDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleCSDecl
entryRuleCSDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCSDeclRule()); }
	iv_ruleCSDecl=ruleCSDecl
	{ $current=$iv_ruleCSDecl.current; }
	EOF;

// Rule CSDecl
ruleCSDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Constituient-System'
		{
			newLeafNode(otherlv_0, grammarAccess.getCSDeclAccess().getConstituientSystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCSDeclAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCSDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCSDeclAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCSDeclAccess().getCSDesignConsistsCSMembersDefintionParserRuleCall_3_0());
				}
				lv_CSDesignConsists_3_0=ruleCSMembersDefintion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCSDeclRule());
					}
					add(
						$current,
						"CSDesignConsists",
						lv_CSDesignConsists_3_0,
						"org.xtext.sosModeling.archModeling.SFDSL.CSMembersDefintion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getCSDeclAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCSMembersDefintion
entryRuleCSMembersDefintion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCSMembersDefintionRule()); }
	iv_ruleCSMembersDefintion=ruleCSMembersDefintion
	{ $current=$iv_ruleCSMembersDefintion.current; }
	EOF;

// Rule CSMembersDefintion
ruleCSMembersDefintion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCSMembersDefintionAccess().getPortsProtDeclarationParserRuleCall_0_0());
				}
				lv_Ports_0_0=ruleProtDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCSMembersDefintionRule());
					}
					add(
						$current,
						"Ports",
						lv_Ports_0_0,
						"org.xtext.sosModeling.archModeling.SFDSL.ProtDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCSMembersDefintionAccess().getAActionsAElementsBehaviorRoutinesParserRuleCall_1_0());
				}
				lv_AActions_1_0=ruleAElementsBehaviorRoutines
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCSMembersDefintionRule());
					}
					add(
						$current,
						"AActions",
						lv_AActions_1_0,
						"org.xtext.sosModeling.archModeling.SFDSL.AElementsBehaviorRoutines");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCSMembersDefintionAccess().getCSConConstraintsCConsDeclParserRuleCall_2_0());
				}
				lv_CSConConstraints_2_0=ruleCConsDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCSMembersDefintionRule());
					}
					add(
						$current,
						"CSConConstraints",
						lv_CSConConstraints_2_0,
						"org.xtext.sosModeling.archModeling.SFDSL.CConsDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCSMembersDefintionAccess().getCSCoreBehaviorStochsticBehaviorsParserRuleCall_3_0());
				}
				lv_CSCoreBehavior_3_0=ruleStochsticBehaviors
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCSMembersDefintionRule());
					}
					add(
						$current,
						"CSCoreBehavior",
						lv_CSCoreBehavior_3_0,
						"org.xtext.sosModeling.archModeling.SFDSL.StochsticBehaviors");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleStochsticBehaviors
entryRuleStochsticBehaviors returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStochsticBehaviorsRule()); }
	iv_ruleStochsticBehaviors=ruleStochsticBehaviors
	{ $current=$iv_ruleStochsticBehaviors.current; }
	EOF;

// Rule StochsticBehaviors
ruleStochsticBehaviors returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CSbehaviorsis'
		{
			newLeafNode(otherlv_0, grammarAccess.getStochsticBehaviorsAccess().getCSbehaviorsisKeyword_0());
		}
		otherlv_1='functinoalaity'
		{
			newLeafNode(otherlv_1, grammarAccess.getStochsticBehaviorsAccess().getFunctinoalaityKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStochsticBehaviorsAccess().getTypeTypesParserRuleCall_2_0());
				}
				lv_type_2_0=ruletypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStochsticBehaviorsRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.sosModeling.archModeling.SFDSL.types");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getStochsticBehaviorsAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStochsticBehaviorsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStochsticBehaviorsAccess().getParamsDeclFormalParametersParserRuleCall_4_0());
				}
				lv_paramsDecl_4_0=ruleformalParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStochsticBehaviorsRule());
					}
					set(
						$current,
						"paramsDecl",
						lv_paramsDecl_4_0,
						"org.xtext.sosModeling.archModeling.SFDSL.formalParameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getStochsticBehaviorsAccess().getLeftSquareBracketKeyword_5_0());
			}
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getStochsticBehaviorsAccess().getRightSquareBracketKeyword_5_1());
			}
		)*
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getStochsticBehaviorsAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStochsticBehaviorsAccess().getFunctionsAElementsBehaviorRoutinesParserRuleCall_7_0());
				}
				lv_functions_8_0=ruleAElementsBehaviorRoutines
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStochsticBehaviorsRule());
					}
					add(
						$current,
						"functions",
						lv_functions_8_0,
						"org.xtext.sosModeling.archModeling.SFDSL.AElementsBehaviorRoutines");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getStochsticBehaviorsAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleportandRoleType
entryRuleportandRoleType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPortandRoleTypeRule()); }
	iv_ruleportandRoleType=ruleportandRoleType
	{ $current=$iv_ruleportandRoleType.current.getText(); }
	EOF;

// Rule portandRoleType
ruleportandRoleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='provides'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPortandRoleTypeAccess().getProvidesKeyword_0());
		}
		    |
		kw='requires'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPortandRoleTypeAccess().getRequiresKeyword_1());
		}
	)
;

// Entry rule entryRulepublicinterfaeceDef
entryRulepublicinterfaeceDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPublicinterfaeceDefRule()); }
	iv_rulepublicinterfaeceDef=rulepublicinterfaeceDef
	{ $current=$iv_rulepublicinterfaeceDef.current; }
	EOF;

// Rule publicinterfaeceDef
rulepublicinterfaeceDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PublicInteface'
		{
			newLeafNode(otherlv_0, grammarAccess.getPublicinterfaeceDefAccess().getPublicIntefaceKeyword_0());
		}
		(
			(
				lv_Name_1_0=RULE_ID
				{
					newLeafNode(lv_Name_1_0, grammarAccess.getPublicinterfaeceDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPublicinterfaeceDefRule());
					}
					setWithLastConsumed(
						$current,
						"Name",
						lv_Name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPublicinterfaeceDefAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPublicinterfaeceDefAccess().getParamsDeclFormalParametersParserRuleCall_3_0());
				}
				lv_paramsDecl_3_0=ruleformalParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPublicinterfaeceDefRule());
					}
					set(
						$current,
						"paramsDecl",
						lv_paramsDecl_3_0,
						"org.xtext.sosModeling.archModeling.SFDSL.formalParameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getPublicinterfaeceDefAccess().getLeftSquareBracketKeyword_4_0());
			}
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getPublicinterfaeceDefAccess().getRightSquareBracketKeyword_4_1());
			}
		)*
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getPublicinterfaeceDefAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleformalParameters
entryRuleformalParameters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormalParametersRule()); }
	iv_ruleformalParameters=ruleformalParameters
	{ $current=$iv_ruleformalParameters.current; }
	EOF;

// Rule formalParameters
ruleformalParameters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFormalParametersAccess().getFormalParametersAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFormalParametersAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFormalParametersAccess().getParamsDeclFormalParameterListParserRuleCall_2_0());
				}
				lv_paramsDecl_2_0=ruleformalParameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormalParametersRule());
					}
					add(
						$current,
						"paramsDecl",
						lv_paramsDecl_2_0,
						"org.xtext.sosModeling.archModeling.SFDSL.formalParameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getFormalParametersAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleformalParameterList
entryRuleformalParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormalParameterListRule()); }
	iv_ruleformalParameterList=ruleformalParameterList
	{ $current=$iv_ruleformalParameterList.current; }
	EOF;

// Rule formalParameterList
ruleformalParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFormalParameterListAccess().getParamDeclFormalParameterParserRuleCall_0_0());
				}
				lv_paramDecl_0_0=ruleformalParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormalParameterListRule());
					}
					set(
						$current,
						"paramDecl",
						lv_paramDecl_0_0,
						"org.xtext.sosModeling.archModeling.SFDSL.formalParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getFormalParameterListAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFormalParameterListAccess().getParamsDeclFormalParameterParserRuleCall_2_0());
				}
				lv_paramsDecl_2_0=ruleformalParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormalParameterListRule());
					}
					add(
						$current,
						"paramsDecl",
						lv_paramsDecl_2_0,
						"org.xtext.sosModeling.archModeling.SFDSL.formalParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleformalParameter
entryRuleformalParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormalParameterRule()); }
	iv_ruleformalParameter=ruleformalParameter
	{ $current=$iv_ruleformalParameter.current; }
	EOF;

// Rule formalParameter
ruleformalParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFormalParameterAccess().getTypeTypesParserRuleCall_0_0());
				}
				lv_type_0_0=ruletypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormalParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.sosModeling.archModeling.SFDSL.types");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFormalParameterAccess().getNameVariableDeclaratorIdParserRuleCall_1_0());
				}
				lv_name_1_0=rulevariableDeclaratorId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormalParameterRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.sosModeling.archModeling.SFDSL.variableDeclaratorId");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulevariableDeclaratorId
entryRulevariableDeclaratorId returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclaratorIdRule()); }
	iv_rulevariableDeclaratorId=rulevariableDeclaratorId
	{ $current=$iv_rulevariableDeclaratorId.current; }
	EOF;

// Rule variableDeclaratorId
rulevariableDeclaratorId returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getVariableDeclaratorIdAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclaratorIdRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getVariableDeclaratorIdAccess().getLeftSquareBracketKeyword_1_0());
			}
			otherlv_2=']'
			{
				newLeafNode(otherlv_2, grammarAccess.getVariableDeclaratorIdAccess().getRightSquareBracketKeyword_1_1());
			}
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getVariableDeclaratorIdAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleProtDeclaration
entryRuleProtDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProtDeclarationRule()); }
	iv_ruleProtDeclaration=ruleProtDeclaration
	{ $current=$iv_ruleProtDeclaration.current; }
	EOF;

// Rule ProtDeclaration
ruleProtDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProtDeclarationAccess().getProtDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProtDeclarationAccess().getPorttypePortandRoleTypeParserRuleCall_1_0());
				}
				lv_porttype_1_0=ruleportandRoleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtDeclarationRule());
					}
					set(
						$current,
						"porttype",
						lv_porttype_1_0,
						"org.xtext.sosModeling.archModeling.SFDSL.portandRoleType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='port'
		{
			newLeafNode(otherlv_2, grammarAccess.getProtDeclarationAccess().getPortKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProtDeclarationRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getProtDeclarationAccess().getPubliicIntractionpointarePublicinterfaeceDefCrossReference_3_0());
				}
			)
		)
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getProtDeclarationAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProtDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			(
				this_ID_2=RULE_ID
				{
					$current.merge(this_ID_2);
				}
				{
					newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
				}
			)*
		)
	)
;

// Entry rule entryRuleAElementsBehaviorRoutines
entryRuleAElementsBehaviorRoutines returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAElementsBehaviorRoutinesRule()); }
	iv_ruleAElementsBehaviorRoutines=ruleAElementsBehaviorRoutines
	{ $current=$iv_ruleAElementsBehaviorRoutines.current; }
	EOF;

// Rule AElementsBehaviorRoutines
ruleAElementsBehaviorRoutines returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAElementsBehaviorRoutinesAccess().getAElementsBehaviorRoutinesAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAElementsBehaviorRoutinesAccess().getCollaborativeActionsCColActionsParserRuleCall_1_0());
				}
				lv_CollaborativeActions_1_0=ruleCColActions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAElementsBehaviorRoutinesRule());
					}
					add(
						$current,
						"CollaborativeActions",
						lv_CollaborativeActions_1_0,
						"org.xtext.sosModeling.archModeling.SFDSL.CColActions");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getAElementsBehaviorRoutinesAccess().getCaolitionBindingAttachCSsParserRuleCall_2_0());
				}
				lv_CaolitionBinding_2_0=ruleattachCSs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAElementsBehaviorRoutinesRule());
					}
					add(
						$current,
						"CaolitionBinding",
						lv_CaolitionBinding_2_0,
						"org.xtext.sosModeling.archModeling.SFDSL.attachCSs");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAElementsBehaviorRoutinesAccess().getRemoveElementsDetachCSsParserRuleCall_3_0());
				}
				lv_RemoveElements_3_0=ruledetachCSs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAElementsBehaviorRoutinesRule());
					}
					add(
						$current,
						"RemoveElements",
						lv_RemoveElements_3_0,
						"org.xtext.sosModeling.archModeling.SFDSL.detachCSs");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAElementsBehaviorRoutinesAccess().getConnectElenentsBindElementsParserRuleCall_4_0());
				}
				lv_ConnectElenents_4_0=ruleBindElements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAElementsBehaviorRoutinesRule());
					}
					add(
						$current,
						"ConnectElenents",
						lv_ConnectElenents_4_0,
						"org.xtext.sosModeling.archModeling.SFDSL.BindElements");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAElementsBehaviorRoutinesAccess().getControlDecisionsControlDecisionsParserRuleCall_5_0());
				}
				lv_ControlDecisions_5_0=ruleControlDecisions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAElementsBehaviorRoutinesRule());
					}
					add(
						$current,
						"ControlDecisions",
						lv_ControlDecisions_5_0,
						"org.xtext.sosModeling.archModeling.SFDSL.ControlDecisions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAElementsBehaviorRoutinesAccess().getActionReatesExponentialRatesParserRuleCall_6_0());
				}
				lv_ActionReates_6_0=ruleExponentialRates
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAElementsBehaviorRoutinesRule());
					}
					add(
						$current,
						"ActionReates",
						lv_ActionReates_6_0,
						"org.xtext.sosModeling.archModeling.SFDSL.ExponentialRates");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAElementsBehaviorRoutinesAccess().getAddElementsAddAElementsParserRuleCall_7_0());
				}
				lv_AddElements_7_0=ruleAddAElements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAElementsBehaviorRoutinesRule());
					}
					add(
						$current,
						"AddElements",
						lv_AddElements_7_0,
						"org.xtext.sosModeling.archModeling.SFDSL.AddAElements");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAElementsBehaviorRoutinesAccess().getHSFtypesExpressionParserRuleCall_8_0());
				}
				lv_HSFtypes_8_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAElementsBehaviorRoutinesRule());
					}
					set(
						$current,
						"HSFtypes",
						lv_HSFtypes_8_0,
						"org.xtext.sosModeling.archModeling.SFDSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCColActions
entryRuleCColActions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCColActionsRule()); }
	iv_ruleCColActions=ruleCColActions
	{ $current=$iv_ruleCColActions.current; }
	EOF;

// Rule CColActions
ruleCColActions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Collaborate'
		{
			newLeafNode(otherlv_0, grammarAccess.getCColActionsAccess().getCollaborateKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCColActionsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCColActionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCColActionsAccess().getTypeTypesParserRuleCall_2_0());
				}
				lv_type_2_0=ruletypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCColActionsRule());
					}
					add(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.sosModeling.archModeling.SFDSL.types");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCColActionsAccess().getParamsDeclFormalParametersParserRuleCall_3_0());
				}
				lv_paramsDecl_3_0=ruleformalParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCColActionsRule());
					}
					add(
						$current,
						"paramsDecl",
						lv_paramsDecl_3_0,
						"org.xtext.sosModeling.archModeling.SFDSL.formalParameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getCColActionsAccess().getLeftSquareBracketKeyword_4_0());
			}
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getCColActionsAccess().getRightSquareBracketKeyword_4_1());
			}
		)*
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getCColActionsAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCColActionsAccess().getMethodBodyFunctinalityParserRuleCall_6_0());
				}
				lv_methodBody_7_0=rulefunctinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCColActionsRule());
					}
					add(
						$current,
						"methodBody",
						lv_methodBody_7_0,
						"org.xtext.sosModeling.archModeling.SFDSL.functinality");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getCColActionsAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRulefunctinality
entryRulefunctinality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctinalityRule()); }
	iv_rulefunctinality=rulefunctinality
	{ $current=$iv_rulefunctinality.current; }
	EOF;

// Rule functinality
rulefunctinality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctinalityAccess().getFunctinalityAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctinalityAccess().getFunctionsAElementsBehaviorRoutinesParserRuleCall_1_0());
				}
				lv_functions_1_0=ruleAElementsBehaviorRoutines
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctinalityRule());
					}
					add(
						$current,
						"functions",
						lv_functions_1_0,
						"org.xtext.sosModeling.archModeling.SFDSL.AElementsBehaviorRoutines");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctinalityRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getFunctinalityAccess().getActionsFunctinalityCrossReference_2_0());
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getFunctinalityAccess().getFullStopKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctinalityRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getFunctinalityAccess().getTargetExponentialRatesCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleAddAElements
entryRuleAddAElements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddAElementsRule()); }
	iv_ruleAddAElements=ruleAddAElements
	{ $current=$iv_ruleAddAElements.current; }
	EOF;

// Rule AddAElements
ruleAddAElements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAddAElementsAccess().getAddAElementsAction_0(),
					$current);
			}
		)
		otherlv_1='instance'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddAElementsAccess().getInstanceKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getAddAElementsAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddAElementsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getAddAElementsAccess().getEqualsSignKeyword_3());
		}
		otherlv_4='new'
		{
			newLeafNode(otherlv_4, grammarAccess.getAddAElementsAccess().getNewKeyword_4());
		}
		(
			(
				lv_type_5_0=RULE_ID
				{
					newLeafNode(lv_type_5_0, grammarAccess.getAddAElementsAccess().getTypeIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddAElementsRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_6='()'
		{
			newLeafNode(otherlv_6, grammarAccess.getAddAElementsAccess().getLeftParenthesisRightParenthesisKeyword_6());
		}
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getAddAElementsAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleattachCSs
entryRuleattachCSs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttachCSsRule()); }
	iv_ruleattachCSs=ruleattachCSs
	{ $current=$iv_ruleattachCSs.current; }
	EOF;

// Rule attachCSs
ruleattachCSs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='attach'
		{
			newLeafNode(otherlv_0, grammarAccess.getAttachCSsAccess().getAttachKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAttachCSsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttachCSsAccess().getAttachParam1ExpressionParserRuleCall_2_0());
				}
				lv_attachParam1_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttachCSsRule());
					}
					add(
						$current,
						"attachParam1",
						lv_attachParam1_2_0,
						"org.xtext.sosModeling.archModeling.SFDSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getAttachCSsAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttachCSsAccess().getAttachParam2ExpressionParserRuleCall_4_0());
				}
				lv_attachParam2_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttachCSsRule());
					}
					add(
						$current,
						"attachParam2",
						lv_attachParam2_4_0,
						"org.xtext.sosModeling.archModeling.SFDSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getAttachCSsAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getAttachCSsAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuledetachCSs
entryRuledetachCSs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDetachCSsRule()); }
	iv_ruledetachCSs=ruledetachCSs
	{ $current=$iv_ruledetachCSs.current; }
	EOF;

// Rule detachCSs
ruledetachCSs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDetachCSsAccess().getDetachCSsAction_0(),
					$current);
			}
		)
		otherlv_1='detach'
		{
			newLeafNode(otherlv_1, grammarAccess.getDetachCSsAccess().getDetachKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getDetachCSsAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDetachCSsAccess().getDetachParam1ExpressionParserRuleCall_3_0());
				}
				lv_detachParam1_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDetachCSsRule());
					}
					add(
						$current,
						"detachParam1",
						lv_detachParam1_3_0,
						"org.xtext.sosModeling.archModeling.SFDSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getDetachCSsAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDetachCSsAccess().getDetachParam2ExpressionParserRuleCall_5_0());
				}
				lv_detachParam2_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDetachCSsRule());
					}
					add(
						$current,
						"detachParam2",
						lv_detachParam2_5_0,
						"org.xtext.sosModeling.archModeling.SFDSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getDetachCSsAccess().getRightParenthesisKeyword_6());
		}
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getDetachCSsAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleBindElements
entryRuleBindElements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindElementsRule()); }
	iv_ruleBindElements=ruleBindElements
	{ $current=$iv_ruleBindElements.current; }
	EOF;

// Rule BindElements
ruleBindElements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBindElementsAccess().getBindElementsAction_0(),
					$current);
			}
		)
		otherlv_1='bind'
		{
			newLeafNode(otherlv_1, grammarAccess.getBindElementsAccess().getBindKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getBindElementsAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBindElementsAccess().getBindParam1ExpressionParserRuleCall_3_0());
				}
				lv_bindParam1_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindElementsRule());
					}
					add(
						$current,
						"bindParam1",
						lv_bindParam1_3_0,
						"org.xtext.sosModeling.archModeling.SFDSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getBindElementsAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBindElementsAccess().getBindParam2ExpressionParserRuleCall_5_0());
				}
				lv_bindParam2_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindElementsRule());
					}
					add(
						$current,
						"bindParam2",
						lv_bindParam2_5_0,
						"org.xtext.sosModeling.archModeling.SFDSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getBindElementsAccess().getRightParenthesisKeyword_6());
		}
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getBindElementsAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleControlDecisions
entryRuleControlDecisions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlDecisionsRule()); }
	iv_ruleControlDecisions=ruleControlDecisions
	{ $current=$iv_ruleControlDecisions.current; }
	EOF;

// Rule ControlDecisions
ruleControlDecisions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getControlDecisionsAccess().getControlDecisionsAction_0(),
					$current);
			}
		)
		otherlv_1='Decide'
		{
			newLeafNode(otherlv_1, grammarAccess.getControlDecisionsAccess().getDecideKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getControlDecisionsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='if'
			{
				newLeafNode(otherlv_3, grammarAccess.getControlDecisionsAccess().getIfKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getControlDecisionsAccess().getExpressionDeclAElementsBehaviorRoutinesParserRuleCall_3_1_0());
					}
					lv_expressionDecl_4_0=ruleAElementsBehaviorRoutines
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getControlDecisionsRule());
						}
						set(
							$current,
							"expressionDecl",
							lv_expressionDecl_4_0,
							"org.xtext.sosModeling.archModeling.SFDSL.AElementsBehaviorRoutines");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='=>'
			{
				newLeafNode(otherlv_5, grammarAccess.getControlDecisionsAccess().getEqualsSignGreaterThanSignKeyword_3_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getControlDecisionsAccess().getStatementDecl1AElementsBehaviorRoutinesParserRuleCall_4_0());
				}
				lv_statementDecl1_6_0=ruleAElementsBehaviorRoutines
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControlDecisionsRule());
					}
					add(
						$current,
						"statementDecl1",
						lv_statementDecl1_6_0,
						"org.xtext.sosModeling.archModeling.SFDSL.AElementsBehaviorRoutines");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getControlDecisionsAccess().getRightCurlyBracketKeyword_5());
		}
		(
			otherlv_8='or'
			{
				newLeafNode(otherlv_8, grammarAccess.getControlDecisionsAccess().getOrKeyword_6_0());
			}
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getControlDecisionsAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				otherlv_10='else'
				{
					newLeafNode(otherlv_10, grammarAccess.getControlDecisionsAccess().getElseKeyword_6_2_0());
				}
				(
					((
						ruleAElementsBehaviorRoutines
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getControlDecisionsAccess().getExpressionOrDeclAElementsBehaviorRoutinesParserRuleCall_6_2_1_0());
						}
						lv_expressionOrDecl_11_0=ruleAElementsBehaviorRoutines
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getControlDecisionsRule());
							}
							add(
								$current,
								"expressionOrDecl",
								lv_expressionOrDecl_11_0,
								"org.xtext.sosModeling.archModeling.SFDSL.AElementsBehaviorRoutines");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_12='=>'
				{
					newLeafNode(otherlv_12, grammarAccess.getControlDecisionsAccess().getEqualsSignGreaterThanSignKeyword_6_2_2());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getControlDecisionsAccess().getStatementDecl2AElementsBehaviorRoutinesParserRuleCall_6_3_0());
					}
					lv_statementDecl2_13_0=ruleAElementsBehaviorRoutines
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getControlDecisionsRule());
						}
						add(
							$current,
							"statementDecl2",
							lv_statementDecl2_13_0,
							"org.xtext.sosModeling.archModeling.SFDSL.AElementsBehaviorRoutines");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getControlDecisionsAccess().getRightCurlyBracketKeyword_6_4());
			}
		)*
		otherlv_15='end;'
		{
			newLeafNode(otherlv_15, grammarAccess.getControlDecisionsAccess().getEndKeyword_7());
		}
		(
			otherlv_16='iterate'
			{
				newLeafNode(otherlv_16, grammarAccess.getControlDecisionsAccess().getIterateKeyword_8_0());
			}
			otherlv_17='{'
			{
				newLeafNode(otherlv_17, grammarAccess.getControlDecisionsAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				((
					ruleAElementsBehaviorRoutines
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getControlDecisionsAccess().getExpressionOrDeclAElementsBehaviorRoutinesParserRuleCall_8_2_0());
					}
					lv_expressionOrDecl_18_0=ruleAElementsBehaviorRoutines
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getControlDecisionsRule());
						}
						add(
							$current,
							"expressionOrDecl",
							lv_expressionOrDecl_18_0,
							"org.xtext.sosModeling.archModeling.SFDSL.AElementsBehaviorRoutines");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_19='=>'
			{
				newLeafNode(otherlv_19, grammarAccess.getControlDecisionsAccess().getEqualsSignGreaterThanSignKeyword_8_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getControlDecisionsAccess().getStatementDecl2AElementsBehaviorRoutinesParserRuleCall_9_0());
				}
				lv_statementDecl2_20_0=ruleAElementsBehaviorRoutines
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControlDecisionsRule());
					}
					add(
						$current,
						"statementDecl2",
						lv_statementDecl2_20_0,
						"org.xtext.sosModeling.archModeling.SFDSL.AElementsBehaviorRoutines");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_21='}'
		{
			newLeafNode(otherlv_21, grammarAccess.getControlDecisionsAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleExponentialRates
entryRuleExponentialRates returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExponentialRatesRule()); }
	iv_ruleExponentialRates=ruleExponentialRates
	{ $current=$iv_ruleExponentialRates.current; }
	EOF;

// Rule ExponentialRates
ruleExponentialRates returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExponentialRatesAccess().getExponentialRatesAction_0_0(),
						$current);
				}
			)
			otherlv_1='TRate'
			{
				newLeafNode(otherlv_1, grammarAccess.getExponentialRatesAccess().getTRateKeyword_0_1());
			}
			(
				(
					lv_delayValue_2_0=RULE_INT
					{
						newLeafNode(lv_delayValue_2_0, grammarAccess.getExponentialRatesAccess().getDelayValueINTTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExponentialRatesRule());
						}
						setWithLastConsumed(
							$current,
							"delayValue",
							lv_delayValue_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_3='.'
			{
				newLeafNode(otherlv_3, grammarAccess.getExponentialRatesAccess().getFullStopKeyword_0_3());
			}
			this_INT_4=RULE_INT
			{
				newLeafNode(this_INT_4, grammarAccess.getExponentialRatesAccess().getINTTerminalRuleCall_0_4());
			}
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getExponentialRatesAccess().getSemicolonKeyword_0_5());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getExponentialRatesAccess().getExponentialRatesExpressionParserRuleCall_1_0());
				}
				lv_ExponentialRates_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExponentialRatesRule());
					}
					set(
						$current,
						"ExponentialRates",
						lv_ExponentialRates_6_0,
						"org.xtext.sosModeling.archModeling.SFDSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCConsDecl
entryRuleCConsDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCConsDeclRule()); }
	iv_ruleCConsDecl=ruleCConsDecl
	{ $current=$iv_ruleCConsDecl.current; }
	EOF;

// Rule CConsDecl
ruleCConsDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCConsDeclAccess().getCConsDeclAction_0_0(),
						$current);
				}
			)
			otherlv_1='StochasticCconstraints'
			{
				newLeafNode(otherlv_1, grammarAccess.getCConsDeclAccess().getStochasticCconstraintsKeyword_0_1());
			}
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getCConsDeclAccess().getNameIDTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCConsDeclRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getCConsDeclAccess().getLeftCurlyBracketKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCConsDeclAccess().getAskconstraintsAskopeatorParserRuleCall_0_4_0());
					}
					lv_Askconstraints_4_0=ruleAskopeator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCConsDeclRule());
						}
						add(
							$current,
							"Askconstraints",
							lv_Askconstraints_4_0,
							"org.xtext.sosModeling.archModeling.SFDSL.Askopeator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCConsDeclAccess().getTellconstraintsTelloperatorParserRuleCall_1_0_0());
					}
					lv_Tellconstraints_5_0=ruleTelloperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCConsDeclRule());
						}
						add(
							$current,
							"Tellconstraints",
							lv_Tellconstraints_5_0,
							"org.xtext.sosModeling.archModeling.SFDSL.Telloperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getCConsDeclAccess().getRightCurlyBracketKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleTelloperator
entryRuleTelloperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTelloperatorRule()); }
	iv_ruleTelloperator=ruleTelloperator
	{ $current=$iv_ruleTelloperator.current; }
	EOF;

// Rule Telloperator
ruleTelloperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTelloperatorAccess().getTelloperatorAction_0(),
					$current);
			}
		)
		(
			otherlv_1='Tell'
			{
				newLeafNode(otherlv_1, grammarAccess.getTelloperatorAccess().getTellKeyword_1_0());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getTelloperatorAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTelloperatorAccess().getConstraintShareDateTypesParserRuleCall_1_2_0());
					}
					lv_ConstraintShareDate_3_0=ruletypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTelloperatorRule());
						}
						set(
							$current,
							"ConstraintShareDate",
							lv_ConstraintShareDate_3_0,
							"org.xtext.sosModeling.archModeling.SFDSL.types");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='.'
			{
				newLeafNode(otherlv_4, grammarAccess.getTelloperatorAccess().getFullStopKeyword_1_3());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTelloperatorRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getTelloperatorAccess().getRateExponentialRatesCrossReference_1_4_0());
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getTelloperatorAccess().getRightParenthesisKeyword_1_5());
			}
		)
	)
;

// Entry rule entryRuleAskopeator
entryRuleAskopeator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAskopeatorRule()); }
	iv_ruleAskopeator=ruleAskopeator
	{ $current=$iv_ruleAskopeator.current; }
	EOF;

// Rule Askopeator
ruleAskopeator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAskopeatorAccess().getAskopeatorAction_0(),
					$current);
			}
		)
		(
			otherlv_1='Ask'
			{
				newLeafNode(otherlv_1, grammarAccess.getAskopeatorAccess().getAskKeyword_1_0());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getAskopeatorAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAskopeatorAccess().getConstraintDataTypesParserRuleCall_1_2_0());
					}
					lv_ConstraintData_3_0=ruletypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAskopeatorRule());
						}
						set(
							$current,
							"ConstraintData",
							lv_ConstraintData_3_0,
							"org.xtext.sosModeling.archModeling.SFDSL.types");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='.'
			{
				newLeafNode(otherlv_4, grammarAccess.getAskopeatorAccess().getFullStopKeyword_1_3());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAskopeatorRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getAskopeatorAccess().getRateExponentialRatesCrossReference_1_4_0());
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getAskopeatorAccess().getRightParenthesisKeyword_1_5());
			}
		)
	)
;

// Entry rule entryRuletraitDeclaration
entryRuletraitDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTraitDeclarationRule()); }
	iv_ruletraitDeclaration=ruletraitDeclaration
	{ $current=$iv_ruletraitDeclaration.current; }
	EOF;

// Rule traitDeclaration
ruletraitDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='trait'
		{
			newLeafNode(otherlv_0, grammarAccess.getTraitDeclarationAccess().getTraitKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTraitDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTraitDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTraitDeclarationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTraitDeclarationAccess().getPortsProtDeclarationParserRuleCall_3_0());
				}
				lv_ports_3_0=ruleProtDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTraitDeclarationRule());
					}
					add(
						$current,
						"ports",
						lv_ports_3_0,
						"org.xtext.sosModeling.archModeling.SFDSL.ProtDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTraitDeclarationAccess().getRolesMedRoleDeclarationParserRuleCall_4_0());
				}
				lv_roles_4_0=ruleMedRoleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTraitDeclarationRule());
					}
					add(
						$current,
						"roles",
						lv_roles_4_0,
						"org.xtext.sosModeling.archModeling.SFDSL.MedRoleDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTraitDeclarationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMedDecl
entryRuleMedDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMedDeclRule()); }
	iv_ruleMedDecl=ruleMedDecl
	{ $current=$iv_ruleMedDecl.current; }
	EOF;

// Rule MedDecl
ruleMedDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mediator'
		{
			newLeafNode(otherlv_0, grammarAccess.getMedDeclAccess().getMediatorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMedDeclAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMedDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMedDeclAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMedDeclAccess().getMedRolesMedRoleDeclarationParserRuleCall_3_0());
				}
				lv_MedRoles_3_0=ruleMedRoleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMedDeclRule());
					}
					add(
						$current,
						"MedRoles",
						lv_MedRoles_3_0,
						"org.xtext.sosModeling.archModeling.SFDSL.MedRoleDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMedDeclAccess().getAActionsAElementsBehaviorRoutinesParserRuleCall_4_0());
				}
				lv_AActions_4_0=ruleAElementsBehaviorRoutines
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMedDeclRule());
					}
					add(
						$current,
						"AActions",
						lv_AActions_4_0,
						"org.xtext.sosModeling.archModeling.SFDSL.AElementsBehaviorRoutines");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMedDeclAccess().getCSConConstraintsCConsDeclParserRuleCall_5_0());
				}
				lv_CSConConstraints_5_0=ruleCConsDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMedDeclRule());
					}
					add(
						$current,
						"CSConConstraints",
						lv_CSConConstraints_5_0,
						"org.xtext.sosModeling.archModeling.SFDSL.CConsDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMedDeclAccess().getMedCoreBehaviorStochsticBehaviorsParserRuleCall_6_0());
				}
				lv_MedCoreBehavior_6_0=ruleStochsticBehaviors
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMedDeclRule());
					}
					add(
						$current,
						"MedCoreBehavior",
						lv_MedCoreBehavior_6_0,
						"org.xtext.sosModeling.archModeling.SFDSL.StochsticBehaviors");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getMedDeclAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleMedRoleDeclaration
entryRuleMedRoleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMedRoleDeclarationRule()); }
	iv_ruleMedRoleDeclaration=ruleMedRoleDeclaration
	{ $current=$iv_ruleMedRoleDeclaration.current; }
	EOF;

// Rule MedRoleDeclaration
ruleMedRoleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMedRoleDeclarationAccess().getMediationRolesDefineMediationRolesParserRuleCall_0_0());
				}
				lv_MediationRoles_0_0=ruleDefineMediationRoles
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMedRoleDeclarationRule());
					}
					add(
						$current,
						"MediationRoles",
						lv_MediationRoles_0_0,
						"org.xtext.sosModeling.archModeling.SFDSL.DefineMediationRoles");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='Med_Role'
		{
			newLeafNode(otherlv_1, grammarAccess.getMedRoleDeclarationAccess().getMed_RoleKeyword_1());
		}
	)
;

// Entry rule entryRuleDefineMediationRoles
entryRuleDefineMediationRoles returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineMediationRolesRule()); }
	iv_ruleDefineMediationRoles=ruleDefineMediationRoles
	{ $current=$iv_ruleDefineMediationRoles.current; }
	EOF;

// Rule DefineMediationRoles
ruleDefineMediationRoles returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDefineMediationRolesAccess().getDefineMediationRolesAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineMediationRolesAccess().getTypePortandRoleTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleportandRoleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineMediationRolesRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.sosModeling.archModeling.SFDSL.portandRoleType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefineMediationRolesRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getDefineMediationRolesAccess().getPubliicIntractionpointarePublicinterfaeceDefCrossReference_2_0());
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getDefineMediationRolesAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefineMediationRolesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAbsArchDecl
entryRuleAbsArchDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbsArchDeclRule()); }
	iv_ruleAbsArchDecl=ruleAbsArchDecl
	{ $current=$iv_ruleAbsArchDecl.current; }
	EOF;

// Rule AbsArchDecl
ruleAbsArchDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SoS_Arch_Caoliton'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbsArchDeclAccess().getSoS_Arch_CaolitonKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAbsArchDeclAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAbsArchDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAbsArchDeclAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='SoS has AEs'
		{
			newLeafNode(otherlv_3, grammarAccess.getAbsArchDeclAccess().getSoSHasAEsKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getAbsArchDeclAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsArchDeclAccess().getMediatorsMedDeclParserRuleCall_5_0());
				}
				lv_Mediators_5_0=ruleMedDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsArchDeclRule());
					}
					add(
						$current,
						"Mediators",
						lv_Mediators_5_0,
						"org.xtext.sosModeling.archModeling.SFDSL.MedDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsArchDeclAccess().getConstitientsCSDeclParserRuleCall_6_0());
				}
				lv_Constitients_6_0=ruleCSDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsArchDeclRule());
					}
					add(
						$current,
						"Constitients",
						lv_Constitients_6_0,
						"org.xtext.sosModeling.archModeling.SFDSL.CSDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getAbsArchDeclAccess().getRightCurlyBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsArchDeclAccess().getAbstractCoaltionAElementsBehaviorRoutinesParserRuleCall_8_0());
				}
				lv_AbstractCoaltion_8_0=ruleAElementsBehaviorRoutines
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsArchDeclRule());
					}
					add(
						$current,
						"AbstractCoaltion",
						lv_AbstractCoaltion_8_0,
						"org.xtext.sosModeling.archModeling.SFDSL.AElementsBehaviorRoutines");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsArchDeclAccess().getGlobalPropsGlobalPropertiesParserRuleCall_9_0());
				}
				lv_GlobalProps_9_0=ruleGlobalProperties
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsArchDeclRule());
					}
					add(
						$current,
						"GlobalProps",
						lv_GlobalProps_9_0,
						"org.xtext.sosModeling.archModeling.SFDSL.GlobalProperties");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGlobalProperties
entryRuleGlobalProperties returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGlobalPropertiesRule()); }
	iv_ruleGlobalProperties=ruleGlobalProperties
	{ $current=$iv_ruleGlobalProperties.current; }
	EOF;

// Rule GlobalProperties
ruleGlobalProperties returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getGlobalPropertiesAccess().getLeftCurlyBracketKeyword_0());
		}
		otherlv_1='SoS-Properties'
		{
			newLeafNode(otherlv_1, grammarAccess.getGlobalPropertiesAccess().getSoSPropertiesKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGlobalPropertiesAccess().getPropertyTypeTypesParserRuleCall_2_0());
				}
				lv_PropertyType_2_0=ruletypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGlobalPropertiesRule());
					}
					set(
						$current,
						"PropertyType",
						lv_PropertyType_2_0,
						"org.xtext.sosModeling.archModeling.SFDSL.types");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getGlobalPropertiesAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGlobalPropertiesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getGlobalPropertiesAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGlobalPropertiesAccess().getAttrinitInitValsParserRuleCall_5_0());
				}
				lv_attrinit_5_0=ruleinitVals
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGlobalPropertiesRule());
					}
					set(
						$current,
						"attrinit",
						lv_attrinit_5_0,
						"org.xtext.sosModeling.archModeling.SFDSL.initVals");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getGlobalPropertiesAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuletypes
entryRuletypes returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypesRule()); }
	iv_ruletypes=ruletypes
	{ $current=$iv_ruletypes.current.getText(); }
	EOF;

// Rule types
ruletypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='stirng'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypesAccess().getStirngKeyword_0());
		}
		    |
		kw='int'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypesAccess().getIntKeyword_1());
		}
		    |
		kw='float'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypesAccess().getFloatKeyword_2());
		}
		    |
		kw='boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypesAccess().getBooleanKeyword_3());
		}
		    |
		kw='type'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypesAccess().getTypeKeyword_4());
		}
		    |
		kw='void'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypesAccess().getVoidKeyword_5());
		}
	)
;

// Entry rule entryRuleinitVals
entryRuleinitVals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitValsRule()); }
	iv_ruleinitVals=ruleinitVals
	{ $current=$iv_ruleinitVals.current; }
	EOF;

// Rule initVals
ruleinitVals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInitValsAccess().getInitValsAction_0_0(),
						$current);
				}
			)
			this_STRING_1=RULE_STRING
			{
				newLeafNode(this_STRING_1, grammarAccess.getInitValsAccess().getSTRINGTerminalRuleCall_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInitValsAccess().getInitValsAction_1_0(),
						$current);
				}
			)
			this_INT_3=RULE_INT
			{
				newLeafNode(this_INT_3, grammarAccess.getInitValsAccess().getINTTerminalRuleCall_1_1());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getInitValsAccess().getFLOATParserRuleCall_2());
		}
		this_FLOAT_4=ruleFLOAT
		{
			$current = $this_FLOAT_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInitValsAccess().getInitValsAction_3_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getInitValsAccess().getBooleanParserRuleCall_3_1());
			}
			ruleBoolean
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBoolean
entryRuleBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBooleanRule()); }
	iv_ruleBoolean=ruleBoolean
	{ $current=$iv_ruleBoolean.current.getText(); }
	EOF;

// Rule Boolean
ruleBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleFLOAT
entryRuleFLOAT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFLOATRule()); }
	iv_ruleFLOAT=ruleFLOAT
	{ $current=$iv_ruleFLOAT.current; }
	EOF;

// Rule FLOAT
ruleFLOAT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getFLOATAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFLOATRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getFLOATAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			newLeafNode(this_INT_2, grammarAccess.getFLOATAccess().getINTTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getLogicalExpressionParserRuleCall());
	}
	this_LogicalExpression_0=ruleLogicalExpression
	{
		$current = $this_LogicalExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleLogicalExpression
entryRuleLogicalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalExpressionRule()); }
	iv_ruleLogicalExpression=ruleLogicalExpression
	{ $current=$iv_ruleLogicalExpression.current; }
	EOF;

// Rule LogicalExpression
ruleLogicalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicalExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=ruleEqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getLogicalExpressionAccess().getLogicalExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='||'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getLogicalExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getLogicalExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='&&'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getLogicalExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getLogicalExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.sosModeling.archModeling.SFDSL.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	iv_ruleEqualityExpression=ruleEqualityExpression
	{ $current=$iv_ruleEqualityExpression.current; }
	EOF;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
		}
		this_RelationalExpression_0=ruleRelationalExpression
		{
			$current = $this_RelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='=='
						{
							newLeafNode(lv_op_2_1, grammarAccess.getEqualityExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='!='
						{
							newLeafNode(lv_op_2_2, grammarAccess.getEqualityExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleRelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.sosModeling.archModeling.SFDSL.RelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	iv_ruleRelationalExpression=ruleRelationalExpression
	{ $current=$iv_ruleRelationalExpression.current; }
	EOF;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getArithmeticExpressionParserRuleCall_0());
		}
		this_ArithmeticExpression_0=ruleArithmeticExpression
		{
			$current = $this_ArithmeticExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='>='
						{
							newLeafNode(lv_op_2_1, grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationalExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='<='
						{
							newLeafNode(lv_op_2_2, grammarAccess.getRelationalExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationalExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3='>'
						{
							newLeafNode(lv_op_2_3, grammarAccess.getRelationalExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationalExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4='<'
						{
							newLeafNode(lv_op_2_4, grammarAccess.getRelationalExpressionAccess().getOpLessThanSignKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationalExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightArithmeticExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleArithmeticExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.sosModeling.archModeling.SFDSL.ArithmeticExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticExpressionRule()); }
	iv_ruleArithmeticExpression=ruleArithmeticExpression
	{ $current=$iv_ruleArithmeticExpression.current; }
	EOF;

// Rule ArithmeticExpression
ruleArithmeticExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getTermParserRuleCall_0());
		}
		this_Term_0=ruleTerm
		{
			$current = $this_Term_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getArithmeticExpressionAccess().getSumOperationLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							lv_op_2_0='+'
							{
								newLeafNode(lv_op_2_0, grammarAccess.getArithmeticExpressionAccess().getOpPlusSignKeyword_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getArithmeticExpressionRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_0, "+");
							}
						)
					)
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getArithmeticExpressionAccess().getMinusOperationLeftAction_1_0_1_0(),
								$current);
						}
					)
					(
						(
							lv_op_4_0='-'
							{
								newLeafNode(lv_op_4_0, grammarAccess.getArithmeticExpressionAccess().getOpHyphenMinusKeyword_1_0_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getArithmeticExpressionRule());
								}
								setWithLastConsumed($current, "op", lv_op_4_0, "-");
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getRightTermParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithmeticExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"org.xtext.sosModeling.archModeling.SFDSL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
		}
		this_Factor_0=ruleFactor
		{
			$current = $this_Factor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getTermAccess().getTermLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='*'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getTermAccess().getOpAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTermRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='/'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getTermAccess().getOpSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTermRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3='mod'
						{
							newLeafNode(lv_op_2_3, grammarAccess.getTermAccess().getOpModKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTermRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTermRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.sosModeling.archModeling.SFDSL.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	iv_ruleFactor=ruleFactor
	{ $current=$iv_ruleFactor.current; }
	EOF;

// Rule Factor
ruleFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getFactorAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getFactorAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current = $this_Expression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getFactorAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getFactorAccess().getUnaryExpressionParserRuleCall_1());
		}
		this_UnaryExpression_3=ruleUnaryExpression
		{
			$current = $this_UnaryExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFactorAccess().getAtomicElementParserRuleCall_2());
		}
		this_AtomicElement_4=ruleAtomicElement
		{
			$current = $this_AtomicElement_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	iv_ruleUnaryExpression=ruleUnaryExpression
	{ $current=$iv_ruleUnaryExpression.current; }
	EOF;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnaryExpressionAccess().getNegationExpressionAction_0(),
					$current);
			}
		)
		(
			('!')=>
			otherlv_1='!'
			{
				newLeafNode(otherlv_1, grammarAccess.getUnaryExpressionAccess().getExclamationMarkKeyword_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExpressionAtomicElementParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleAtomicElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.sosModeling.archModeling.SFDSL.AtomicElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAtomicElement
entryRuleAtomicElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicElementRule()); }
	iv_ruleAtomicElement=ruleAtomicElement
	{ $current=$iv_ruleAtomicElement.current; }
	EOF;

// Rule AtomicElement
ruleAtomicElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAtomicElementAccess().getLiteralElementParserRuleCall_0());
		}
		this_LiteralElement_0=ruleLiteralElement
		{
			$current = $this_LiteralElement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicElementAccess().getVariableRefAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_variable_2_0=RULE_ID
					{
						newLeafNode(lv_variable_2_0, grammarAccess.getAtomicElementAccess().getVariableIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicElementRule());
						}
						setWithLastConsumed(
							$current,
							"variable",
							lv_variable_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLiteralElement
entryRuleLiteralElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralElementRule()); }
	iv_ruleLiteralElement=ruleLiteralElement
	{ $current=$iv_ruleLiteralElement.current; }
	EOF;

// Rule LiteralElement
ruleLiteralElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralElementAccess().getIntegerLiteralParserRuleCall_0());
		}
		this_IntegerLiteral_0=ruleIntegerLiteral
		{
			$current = $this_IntegerLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralElementAccess().getRealLiteralParserRuleCall_1());
		}
		this_RealLiteral_1=ruleRealLiteral
		{
			$current = $this_RealLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralElementAccess().getStringLiteralParserRuleCall_2());
		}
		this_StringLiteral_2=ruleStringLiteral
		{
			$current = $this_StringLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralElementAccess().getBooleanLiteralParserRuleCall_3());
		}
		this_BooleanLiteral_3=ruleBooleanLiteral
		{
			$current = $this_BooleanLiteral_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerLiteralRule()); }
	iv_ruleIntegerLiteral=ruleIntegerLiteral
	{ $current=$iv_ruleIntegerLiteral.current; }
	EOF;

// Rule IntegerLiteral
ruleIntegerLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntegerLiteralAccess().getIntegerLiteralAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getIntegerLiteralAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleRealLiteral
entryRuleRealLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRealLiteralRule()); }
	iv_ruleRealLiteral=ruleRealLiteral
	{ $current=$iv_ruleRealLiteral.current; }
	EOF;

// Rule RealLiteral
ruleRealLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRealLiteralAccess().getRealLiteralAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRealLiteralAccess().getValueFLOATParserRuleCall_1_0());
				}
				lv_value_1_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRealLiteralRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.sosModeling.archModeling.SFDSL.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStringLiteralAccess().getStringLiteralAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	iv_ruleBooleanLiteral=ruleBooleanLiteral
	{ $current=$iv_ruleBooleanLiteral.current; }
	EOF;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_value_1_1='true'
					{
						newLeafNode(lv_value_1_1, grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanLiteralRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_1, null);
					}
					    |
					lv_value_1_2='false'
					{
						newLeafNode(lv_value_1_2, grammarAccess.getBooleanLiteralAccess().getValueFalseKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanLiteralRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_2, null);
					}
				)
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
