/**
 * generated by Xtext 2.19.0
 */
package org.xtext.sosModeling.archModeling.hSFDSL.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.xtext.sosModeling.archModeling.hSFDSL.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.sosModeling.archModeling.hSFDSL.HSFDSLPackage
 * @generated
 */
public class HSFDSLAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static HSFDSLPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HSFDSLAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = HSFDSLPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HSFDSLSwitch<Adapter> modelSwitch =
    new HSFDSLSwitch<Adapter>()
    {
      @Override
      public Adapter caseStochasticModeling(StochasticModeling object)
      {
        return createStochasticModelingAdapter();
      }
      @Override
      public Adapter caseModelElementsDecaration(ModelElementsDecaration object)
      {
        return createModelElementsDecarationAdapter();
      }
      @Override
      public Adapter caseCSDecl(CSDecl object)
      {
        return createCSDeclAdapter();
      }
      @Override
      public Adapter caseCSMembersDefintion(CSMembersDefintion object)
      {
        return createCSMembersDefintionAdapter();
      }
      @Override
      public Adapter caseStochsticBehaviors(StochsticBehaviors object)
      {
        return createStochsticBehaviorsAdapter();
      }
      @Override
      public Adapter casepublicinterfaeceDef(publicinterfaeceDef object)
      {
        return createpublicinterfaeceDefAdapter();
      }
      @Override
      public Adapter caseformalParameters(formalParameters object)
      {
        return createformalParametersAdapter();
      }
      @Override
      public Adapter caseformalParameterList(formalParameterList object)
      {
        return createformalParameterListAdapter();
      }
      @Override
      public Adapter caseformalParameter(formalParameter object)
      {
        return createformalParameterAdapter();
      }
      @Override
      public Adapter casevariableDeclaratorId(variableDeclaratorId object)
      {
        return createvariableDeclaratorIdAdapter();
      }
      @Override
      public Adapter caseProtDeclaration(ProtDeclaration object)
      {
        return createProtDeclarationAdapter();
      }
      @Override
      public Adapter caseAElementsBehaviorRoutines(AElementsBehaviorRoutines object)
      {
        return createAElementsBehaviorRoutinesAdapter();
      }
      @Override
      public Adapter caseCColActions(CColActions object)
      {
        return createCColActionsAdapter();
      }
      @Override
      public Adapter casefunctinality(functinality object)
      {
        return createfunctinalityAdapter();
      }
      @Override
      public Adapter caseAddAElements(AddAElements object)
      {
        return createAddAElementsAdapter();
      }
      @Override
      public Adapter caseattachCSs(attachCSs object)
      {
        return createattachCSsAdapter();
      }
      @Override
      public Adapter casedetachCSs(detachCSs object)
      {
        return createdetachCSsAdapter();
      }
      @Override
      public Adapter caseBindElements(BindElements object)
      {
        return createBindElementsAdapter();
      }
      @Override
      public Adapter caseControlDecisions(ControlDecisions object)
      {
        return createControlDecisionsAdapter();
      }
      @Override
      public Adapter caseExponentialRates(ExponentialRates object)
      {
        return createExponentialRatesAdapter();
      }
      @Override
      public Adapter caseCConsDecl(CConsDecl object)
      {
        return createCConsDeclAdapter();
      }
      @Override
      public Adapter caseTelloperator(Telloperator object)
      {
        return createTelloperatorAdapter();
      }
      @Override
      public Adapter caseAskopeator(Askopeator object)
      {
        return createAskopeatorAdapter();
      }
      @Override
      public Adapter casetraitDeclaration(traitDeclaration object)
      {
        return createtraitDeclarationAdapter();
      }
      @Override
      public Adapter caseMedDecl(MedDecl object)
      {
        return createMedDeclAdapter();
      }
      @Override
      public Adapter caseMedRoleDeclaration(MedRoleDeclaration object)
      {
        return createMedRoleDeclarationAdapter();
      }
      @Override
      public Adapter caseDefineMediationRoles(DefineMediationRoles object)
      {
        return createDefineMediationRolesAdapter();
      }
      @Override
      public Adapter caseAbsArchDecl(AbsArchDecl object)
      {
        return createAbsArchDeclAdapter();
      }
      @Override
      public Adapter caseGlobalProperties(GlobalProperties object)
      {
        return createGlobalPropertiesAdapter();
      }
      @Override
      public Adapter caseinitVals(initVals object)
      {
        return createinitValsAdapter();
      }
      @Override
      public Adapter caseFLOAT(FLOAT object)
      {
        return createFLOATAdapter();
      }
      @Override
      public Adapter caseExpression(Expression object)
      {
        return createExpressionAdapter();
      }
      @Override
      public Adapter caseLogicalExpression(LogicalExpression object)
      {
        return createLogicalExpressionAdapter();
      }
      @Override
      public Adapter caseEqualityExpression(EqualityExpression object)
      {
        return createEqualityExpressionAdapter();
      }
      @Override
      public Adapter caseRelationalExpression(RelationalExpression object)
      {
        return createRelationalExpressionAdapter();
      }
      @Override
      public Adapter caseSumOperation(SumOperation object)
      {
        return createSumOperationAdapter();
      }
      @Override
      public Adapter caseMinusOperation(MinusOperation object)
      {
        return createMinusOperationAdapter();
      }
      @Override
      public Adapter caseTerm(Term object)
      {
        return createTermAdapter();
      }
      @Override
      public Adapter caseNegationExpression(NegationExpression object)
      {
        return createNegationExpressionAdapter();
      }
      @Override
      public Adapter caseVariableRef(VariableRef object)
      {
        return createVariableRefAdapter();
      }
      @Override
      public Adapter caseIntegerLiteral(IntegerLiteral object)
      {
        return createIntegerLiteralAdapter();
      }
      @Override
      public Adapter caseRealLiteral(RealLiteral object)
      {
        return createRealLiteralAdapter();
      }
      @Override
      public Adapter caseStringLiteral(StringLiteral object)
      {
        return createStringLiteralAdapter();
      }
      @Override
      public Adapter caseBooleanLiteral(BooleanLiteral object)
      {
        return createBooleanLiteralAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.StochasticModeling <em>Stochastic Modeling</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.StochasticModeling
   * @generated
   */
  public Adapter createStochasticModelingAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.ModelElementsDecaration <em>Model Elements Decaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.ModelElementsDecaration
   * @generated
   */
  public Adapter createModelElementsDecarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.CSDecl <em>CS Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.CSDecl
   * @generated
   */
  public Adapter createCSDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.CSMembersDefintion <em>CS Members Defintion</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.CSMembersDefintion
   * @generated
   */
  public Adapter createCSMembersDefintionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.StochsticBehaviors <em>Stochstic Behaviors</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.StochsticBehaviors
   * @generated
   */
  public Adapter createStochsticBehaviorsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.publicinterfaeceDef <em>publicinterfaece Def</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.publicinterfaeceDef
   * @generated
   */
  public Adapter createpublicinterfaeceDefAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.formalParameters <em>formal Parameters</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.formalParameters
   * @generated
   */
  public Adapter createformalParametersAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.formalParameterList <em>formal Parameter List</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.formalParameterList
   * @generated
   */
  public Adapter createformalParameterListAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.formalParameter <em>formal Parameter</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.formalParameter
   * @generated
   */
  public Adapter createformalParameterAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.variableDeclaratorId <em>variable Declarator Id</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.variableDeclaratorId
   * @generated
   */
  public Adapter createvariableDeclaratorIdAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.ProtDeclaration <em>Prot Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.ProtDeclaration
   * @generated
   */
  public Adapter createProtDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.AElementsBehaviorRoutines <em>AElements Behavior Routines</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.AElementsBehaviorRoutines
   * @generated
   */
  public Adapter createAElementsBehaviorRoutinesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.CColActions <em>CCol Actions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.CColActions
   * @generated
   */
  public Adapter createCColActionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.functinality <em>functinality</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.functinality
   * @generated
   */
  public Adapter createfunctinalityAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.AddAElements <em>Add AElements</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.AddAElements
   * @generated
   */
  public Adapter createAddAElementsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.attachCSs <em>attach CSs</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.attachCSs
   * @generated
   */
  public Adapter createattachCSsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.detachCSs <em>detach CSs</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.detachCSs
   * @generated
   */
  public Adapter createdetachCSsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.BindElements <em>Bind Elements</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.BindElements
   * @generated
   */
  public Adapter createBindElementsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.ControlDecisions <em>Control Decisions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.ControlDecisions
   * @generated
   */
  public Adapter createControlDecisionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.ExponentialRates <em>Exponential Rates</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.ExponentialRates
   * @generated
   */
  public Adapter createExponentialRatesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.CConsDecl <em>CCons Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.CConsDecl
   * @generated
   */
  public Adapter createCConsDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.Telloperator <em>Telloperator</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.Telloperator
   * @generated
   */
  public Adapter createTelloperatorAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.Askopeator <em>Askopeator</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.Askopeator
   * @generated
   */
  public Adapter createAskopeatorAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.traitDeclaration <em>trait Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.traitDeclaration
   * @generated
   */
  public Adapter createtraitDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.MedDecl <em>Med Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.MedDecl
   * @generated
   */
  public Adapter createMedDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.MedRoleDeclaration <em>Med Role Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.MedRoleDeclaration
   * @generated
   */
  public Adapter createMedRoleDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.DefineMediationRoles <em>Define Mediation Roles</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.DefineMediationRoles
   * @generated
   */
  public Adapter createDefineMediationRolesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.AbsArchDecl <em>Abs Arch Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.AbsArchDecl
   * @generated
   */
  public Adapter createAbsArchDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.GlobalProperties <em>Global Properties</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.GlobalProperties
   * @generated
   */
  public Adapter createGlobalPropertiesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.initVals <em>init Vals</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.initVals
   * @generated
   */
  public Adapter createinitValsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.FLOAT <em>FLOAT</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.FLOAT
   * @generated
   */
  public Adapter createFLOATAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.Expression
   * @generated
   */
  public Adapter createExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.LogicalExpression <em>Logical Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.LogicalExpression
   * @generated
   */
  public Adapter createLogicalExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.EqualityExpression <em>Equality Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.EqualityExpression
   * @generated
   */
  public Adapter createEqualityExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.RelationalExpression <em>Relational Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.RelationalExpression
   * @generated
   */
  public Adapter createRelationalExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.SumOperation <em>Sum Operation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.SumOperation
   * @generated
   */
  public Adapter createSumOperationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.MinusOperation <em>Minus Operation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.MinusOperation
   * @generated
   */
  public Adapter createMinusOperationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.Term <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.Term
   * @generated
   */
  public Adapter createTermAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.NegationExpression <em>Negation Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.NegationExpression
   * @generated
   */
  public Adapter createNegationExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.VariableRef <em>Variable Ref</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.VariableRef
   * @generated
   */
  public Adapter createVariableRefAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.IntegerLiteral <em>Integer Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.IntegerLiteral
   * @generated
   */
  public Adapter createIntegerLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.RealLiteral <em>Real Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.RealLiteral
   * @generated
   */
  public Adapter createRealLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.StringLiteral <em>String Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.StringLiteral
   * @generated
   */
  public Adapter createStringLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.sosModeling.archModeling.hSFDSL.BooleanLiteral <em>Boolean Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.sosModeling.archModeling.hSFDSL.BooleanLiteral
   * @generated
   */
  public Adapter createBooleanLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //HSFDSLAdapterFactory
