/**
 * generated by Xtext 2.19.0
 */
package org.xtext.sosModeling.archModeling.hSFDSL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.sosModeling.archModeling.hSFDSL.HSFDSLPackage;
import org.xtext.sosModeling.archModeling.hSFDSL.formalParameter;
import org.xtext.sosModeling.archModeling.hSFDSL.formalParameterList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>formal Parameter List</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.formalParameterListImpl#getParamDecl <em>Param Decl</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.formalParameterListImpl#getParamsDecl <em>Params Decl</em>}</li>
 * </ul>
 *
 * @generated
 */
public class formalParameterListImpl extends MinimalEObjectImpl.Container implements formalParameterList
{
  /**
   * The cached value of the '{@link #getParamDecl() <em>Param Decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParamDecl()
   * @generated
   * @ordered
   */
  protected formalParameter paramDecl;

  /**
   * The cached value of the '{@link #getParamsDecl() <em>Params Decl</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParamsDecl()
   * @generated
   * @ordered
   */
  protected EList<formalParameter> paramsDecl;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected formalParameterListImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HSFDSLPackage.Literals.FORMAL_PARAMETER_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public formalParameter getParamDecl()
  {
    return paramDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParamDecl(formalParameter newParamDecl, NotificationChain msgs)
  {
    formalParameter oldParamDecl = paramDecl;
    paramDecl = newParamDecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAM_DECL, oldParamDecl, newParamDecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParamDecl(formalParameter newParamDecl)
  {
    if (newParamDecl != paramDecl)
    {
      NotificationChain msgs = null;
      if (paramDecl != null)
        msgs = ((InternalEObject)paramDecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAM_DECL, null, msgs);
      if (newParamDecl != null)
        msgs = ((InternalEObject)newParamDecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAM_DECL, null, msgs);
      msgs = basicSetParamDecl(newParamDecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAM_DECL, newParamDecl, newParamDecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<formalParameter> getParamsDecl()
  {
    if (paramsDecl == null)
    {
      paramsDecl = new EObjectContainmentEList<formalParameter>(formalParameter.class, this, HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAMS_DECL);
    }
    return paramsDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAM_DECL:
        return basicSetParamDecl(null, msgs);
      case HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAMS_DECL:
        return ((InternalEList<?>)getParamsDecl()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAM_DECL:
        return getParamDecl();
      case HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAMS_DECL:
        return getParamsDecl();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAM_DECL:
        setParamDecl((formalParameter)newValue);
        return;
      case HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAMS_DECL:
        getParamsDecl().clear();
        getParamsDecl().addAll((Collection<? extends formalParameter>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAM_DECL:
        setParamDecl((formalParameter)null);
        return;
      case HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAMS_DECL:
        getParamsDecl().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAM_DECL:
        return paramDecl != null;
      case HSFDSLPackage.FORMAL_PARAMETER_LIST__PARAMS_DECL:
        return paramsDecl != null && !paramsDecl.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //formalParameterListImpl
