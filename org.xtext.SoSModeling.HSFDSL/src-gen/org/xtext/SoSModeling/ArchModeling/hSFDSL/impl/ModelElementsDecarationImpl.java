/**
 * generated by Xtext 2.19.0
 */
package org.xtext.sosModeling.archModeling.hSFDSL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.sosModeling.archModeling.hSFDSL.AElementsBehaviorRoutines;
import org.xtext.sosModeling.archModeling.hSFDSL.AbsArchDecl;
import org.xtext.sosModeling.archModeling.hSFDSL.CConsDecl;
import org.xtext.sosModeling.archModeling.hSFDSL.CSDecl;
import org.xtext.sosModeling.archModeling.hSFDSL.HSFDSLPackage;
import org.xtext.sosModeling.archModeling.hSFDSL.MedDecl;
import org.xtext.sosModeling.archModeling.hSFDSL.ModelElementsDecaration;
import org.xtext.sosModeling.archModeling.hSFDSL.publicinterfaeceDef;
import org.xtext.sosModeling.archModeling.hSFDSL.traitDeclaration;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model Elements Decaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.ModelElementsDecarationImpl#getAbstractArchModel <em>Abstract Arch Model</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.ModelElementsDecarationImpl#getConstiuenetSystemSDesign <em>Constiuenet System SDesign</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.ModelElementsDecarationImpl#getMediatorDesign <em>Mediator Design</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.ModelElementsDecarationImpl#getConcurrentConstraints <em>Concurrent Constraints</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.ModelElementsDecarationImpl#getArchitecutreElementsBehaviors <em>Architecutre Elements Behaviors</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.ModelElementsDecarationImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.ModelElementsDecarationImpl#getInterfce <em>Interfce</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.ModelElementsDecarationImpl#getArchTraits <em>Arch Traits</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelElementsDecarationImpl extends MinimalEObjectImpl.Container implements ModelElementsDecaration
{
  /**
   * The cached value of the '{@link #getAbstractArchModel() <em>Abstract Arch Model</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbstractArchModel()
   * @generated
   * @ordered
   */
  protected EList<AbsArchDecl> abstractArchModel;

  /**
   * The cached value of the '{@link #getConstiuenetSystemSDesign() <em>Constiuenet System SDesign</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstiuenetSystemSDesign()
   * @generated
   * @ordered
   */
  protected EList<CSDecl> constiuenetSystemSDesign;

  /**
   * The cached value of the '{@link #getMediatorDesign() <em>Mediator Design</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMediatorDesign()
   * @generated
   * @ordered
   */
  protected EList<MedDecl> mediatorDesign;

  /**
   * The cached value of the '{@link #getConcurrentConstraints() <em>Concurrent Constraints</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConcurrentConstraints()
   * @generated
   * @ordered
   */
  protected EList<CConsDecl> concurrentConstraints;

  /**
   * The cached value of the '{@link #getArchitecutreElementsBehaviors() <em>Architecutre Elements Behaviors</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArchitecutreElementsBehaviors()
   * @generated
   * @ordered
   */
  protected EList<AElementsBehaviorRoutines> architecutreElementsBehaviors;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getInterfce() <em>Interfce</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInterfce()
   * @generated
   * @ordered
   */
  protected EList<publicinterfaeceDef> interfce;

  /**
   * The cached value of the '{@link #getArchTraits() <em>Arch Traits</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArchTraits()
   * @generated
   * @ordered
   */
  protected EList<traitDeclaration> archTraits;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelElementsDecarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HSFDSLPackage.Literals.MODEL_ELEMENTS_DECARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AbsArchDecl> getAbstractArchModel()
  {
    if (abstractArchModel == null)
    {
      abstractArchModel = new EObjectContainmentEList<AbsArchDecl>(AbsArchDecl.class, this, HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ABSTRACT_ARCH_MODEL);
    }
    return abstractArchModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<CSDecl> getConstiuenetSystemSDesign()
  {
    if (constiuenetSystemSDesign == null)
    {
      constiuenetSystemSDesign = new EObjectContainmentEList<CSDecl>(CSDecl.class, this, HSFDSLPackage.MODEL_ELEMENTS_DECARATION__CONSTIUENET_SYSTEM_SDESIGN);
    }
    return constiuenetSystemSDesign;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<MedDecl> getMediatorDesign()
  {
    if (mediatorDesign == null)
    {
      mediatorDesign = new EObjectContainmentEList<MedDecl>(MedDecl.class, this, HSFDSLPackage.MODEL_ELEMENTS_DECARATION__MEDIATOR_DESIGN);
    }
    return mediatorDesign;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<CConsDecl> getConcurrentConstraints()
  {
    if (concurrentConstraints == null)
    {
      concurrentConstraints = new EObjectContainmentEList<CConsDecl>(CConsDecl.class, this, HSFDSLPackage.MODEL_ELEMENTS_DECARATION__CONCURRENT_CONSTRAINTS);
    }
    return concurrentConstraints;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AElementsBehaviorRoutines> getArchitecutreElementsBehaviors()
  {
    if (architecutreElementsBehaviors == null)
    {
      architecutreElementsBehaviors = new EObjectContainmentEList<AElementsBehaviorRoutines>(AElementsBehaviorRoutines.class, this, HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ARCHITECUTRE_ELEMENTS_BEHAVIORS);
    }
    return architecutreElementsBehaviors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HSFDSLPackage.MODEL_ELEMENTS_DECARATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<publicinterfaeceDef> getInterfce()
  {
    if (interfce == null)
    {
      interfce = new EObjectContainmentEList<publicinterfaeceDef>(publicinterfaeceDef.class, this, HSFDSLPackage.MODEL_ELEMENTS_DECARATION__INTERFCE);
    }
    return interfce;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<traitDeclaration> getArchTraits()
  {
    if (archTraits == null)
    {
      archTraits = new EObjectContainmentEList<traitDeclaration>(traitDeclaration.class, this, HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ARCH_TRAITS);
    }
    return archTraits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ABSTRACT_ARCH_MODEL:
        return ((InternalEList<?>)getAbstractArchModel()).basicRemove(otherEnd, msgs);
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__CONSTIUENET_SYSTEM_SDESIGN:
        return ((InternalEList<?>)getConstiuenetSystemSDesign()).basicRemove(otherEnd, msgs);
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__MEDIATOR_DESIGN:
        return ((InternalEList<?>)getMediatorDesign()).basicRemove(otherEnd, msgs);
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__CONCURRENT_CONSTRAINTS:
        return ((InternalEList<?>)getConcurrentConstraints()).basicRemove(otherEnd, msgs);
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ARCHITECUTRE_ELEMENTS_BEHAVIORS:
        return ((InternalEList<?>)getArchitecutreElementsBehaviors()).basicRemove(otherEnd, msgs);
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__INTERFCE:
        return ((InternalEList<?>)getInterfce()).basicRemove(otherEnd, msgs);
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ARCH_TRAITS:
        return ((InternalEList<?>)getArchTraits()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ABSTRACT_ARCH_MODEL:
        return getAbstractArchModel();
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__CONSTIUENET_SYSTEM_SDESIGN:
        return getConstiuenetSystemSDesign();
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__MEDIATOR_DESIGN:
        return getMediatorDesign();
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__CONCURRENT_CONSTRAINTS:
        return getConcurrentConstraints();
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ARCHITECUTRE_ELEMENTS_BEHAVIORS:
        return getArchitecutreElementsBehaviors();
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__NAME:
        return getName();
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__INTERFCE:
        return getInterfce();
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ARCH_TRAITS:
        return getArchTraits();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ABSTRACT_ARCH_MODEL:
        getAbstractArchModel().clear();
        getAbstractArchModel().addAll((Collection<? extends AbsArchDecl>)newValue);
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__CONSTIUENET_SYSTEM_SDESIGN:
        getConstiuenetSystemSDesign().clear();
        getConstiuenetSystemSDesign().addAll((Collection<? extends CSDecl>)newValue);
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__MEDIATOR_DESIGN:
        getMediatorDesign().clear();
        getMediatorDesign().addAll((Collection<? extends MedDecl>)newValue);
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__CONCURRENT_CONSTRAINTS:
        getConcurrentConstraints().clear();
        getConcurrentConstraints().addAll((Collection<? extends CConsDecl>)newValue);
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ARCHITECUTRE_ELEMENTS_BEHAVIORS:
        getArchitecutreElementsBehaviors().clear();
        getArchitecutreElementsBehaviors().addAll((Collection<? extends AElementsBehaviorRoutines>)newValue);
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__NAME:
        setName((String)newValue);
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__INTERFCE:
        getInterfce().clear();
        getInterfce().addAll((Collection<? extends publicinterfaeceDef>)newValue);
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ARCH_TRAITS:
        getArchTraits().clear();
        getArchTraits().addAll((Collection<? extends traitDeclaration>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ABSTRACT_ARCH_MODEL:
        getAbstractArchModel().clear();
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__CONSTIUENET_SYSTEM_SDESIGN:
        getConstiuenetSystemSDesign().clear();
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__MEDIATOR_DESIGN:
        getMediatorDesign().clear();
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__CONCURRENT_CONSTRAINTS:
        getConcurrentConstraints().clear();
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ARCHITECUTRE_ELEMENTS_BEHAVIORS:
        getArchitecutreElementsBehaviors().clear();
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__INTERFCE:
        getInterfce().clear();
        return;
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ARCH_TRAITS:
        getArchTraits().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ABSTRACT_ARCH_MODEL:
        return abstractArchModel != null && !abstractArchModel.isEmpty();
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__CONSTIUENET_SYSTEM_SDESIGN:
        return constiuenetSystemSDesign != null && !constiuenetSystemSDesign.isEmpty();
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__MEDIATOR_DESIGN:
        return mediatorDesign != null && !mediatorDesign.isEmpty();
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__CONCURRENT_CONSTRAINTS:
        return concurrentConstraints != null && !concurrentConstraints.isEmpty();
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ARCHITECUTRE_ELEMENTS_BEHAVIORS:
        return architecutreElementsBehaviors != null && !architecutreElementsBehaviors.isEmpty();
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__INTERFCE:
        return interfce != null && !interfce.isEmpty();
      case HSFDSLPackage.MODEL_ELEMENTS_DECARATION__ARCH_TRAITS:
        return archTraits != null && !archTraits.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ModelElementsDecarationImpl
