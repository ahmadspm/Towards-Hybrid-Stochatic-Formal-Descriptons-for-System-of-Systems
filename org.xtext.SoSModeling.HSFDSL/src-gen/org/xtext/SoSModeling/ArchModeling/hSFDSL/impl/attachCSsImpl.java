/**
 * generated by Xtext 2.19.0
 */
package org.xtext.sosModeling.archModeling.hSFDSL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.sosModeling.archModeling.hSFDSL.Expression;
import org.xtext.sosModeling.archModeling.hSFDSL.HSFDSLPackage;
import org.xtext.sosModeling.archModeling.hSFDSL.attachCSs;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>attach CSs</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.attachCSsImpl#getAttachParam1 <em>Attach Param1</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.attachCSsImpl#getAttachParam2 <em>Attach Param2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class attachCSsImpl extends MinimalEObjectImpl.Container implements attachCSs
{
  /**
   * The cached value of the '{@link #getAttachParam1() <em>Attach Param1</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttachParam1()
   * @generated
   * @ordered
   */
  protected EList<Expression> attachParam1;

  /**
   * The cached value of the '{@link #getAttachParam2() <em>Attach Param2</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttachParam2()
   * @generated
   * @ordered
   */
  protected EList<Expression> attachParam2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected attachCSsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HSFDSLPackage.Literals.ATTACH_CSS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Expression> getAttachParam1()
  {
    if (attachParam1 == null)
    {
      attachParam1 = new EObjectContainmentEList<Expression>(Expression.class, this, HSFDSLPackage.ATTACH_CSS__ATTACH_PARAM1);
    }
    return attachParam1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Expression> getAttachParam2()
  {
    if (attachParam2 == null)
    {
      attachParam2 = new EObjectContainmentEList<Expression>(Expression.class, this, HSFDSLPackage.ATTACH_CSS__ATTACH_PARAM2);
    }
    return attachParam2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case HSFDSLPackage.ATTACH_CSS__ATTACH_PARAM1:
        return ((InternalEList<?>)getAttachParam1()).basicRemove(otherEnd, msgs);
      case HSFDSLPackage.ATTACH_CSS__ATTACH_PARAM2:
        return ((InternalEList<?>)getAttachParam2()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HSFDSLPackage.ATTACH_CSS__ATTACH_PARAM1:
        return getAttachParam1();
      case HSFDSLPackage.ATTACH_CSS__ATTACH_PARAM2:
        return getAttachParam2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HSFDSLPackage.ATTACH_CSS__ATTACH_PARAM1:
        getAttachParam1().clear();
        getAttachParam1().addAll((Collection<? extends Expression>)newValue);
        return;
      case HSFDSLPackage.ATTACH_CSS__ATTACH_PARAM2:
        getAttachParam2().clear();
        getAttachParam2().addAll((Collection<? extends Expression>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.ATTACH_CSS__ATTACH_PARAM1:
        getAttachParam1().clear();
        return;
      case HSFDSLPackage.ATTACH_CSS__ATTACH_PARAM2:
        getAttachParam2().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.ATTACH_CSS__ATTACH_PARAM1:
        return attachParam1 != null && !attachParam1.isEmpty();
      case HSFDSLPackage.ATTACH_CSS__ATTACH_PARAM2:
        return attachParam2 != null && !attachParam2.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //attachCSsImpl
