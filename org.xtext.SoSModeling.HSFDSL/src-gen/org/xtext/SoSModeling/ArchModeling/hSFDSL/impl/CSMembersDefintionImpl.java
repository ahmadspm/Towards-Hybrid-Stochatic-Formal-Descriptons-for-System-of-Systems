/**
 * generated by Xtext 2.19.0
 */
package org.xtext.sosModeling.archModeling.hSFDSL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.sosModeling.archModeling.hSFDSL.AElementsBehaviorRoutines;
import org.xtext.sosModeling.archModeling.hSFDSL.CConsDecl;
import org.xtext.sosModeling.archModeling.hSFDSL.CSMembersDefintion;
import org.xtext.sosModeling.archModeling.hSFDSL.HSFDSLPackage;
import org.xtext.sosModeling.archModeling.hSFDSL.ProtDeclaration;
import org.xtext.sosModeling.archModeling.hSFDSL.StochsticBehaviors;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>CS Members Defintion</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.CSMembersDefintionImpl#getPorts <em>Ports</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.CSMembersDefintionImpl#getAActions <em>AActions</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.CSMembersDefintionImpl#getCSConConstraints <em>CS Con Constraints</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.CSMembersDefintionImpl#getCSCoreBehavior <em>CS Core Behavior</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CSMembersDefintionImpl extends MinimalEObjectImpl.Container implements CSMembersDefintion
{
  /**
   * The cached value of the '{@link #getPorts() <em>Ports</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPorts()
   * @generated
   * @ordered
   */
  protected EList<ProtDeclaration> ports;

  /**
   * The cached value of the '{@link #getAActions() <em>AActions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAActions()
   * @generated
   * @ordered
   */
  protected EList<AElementsBehaviorRoutines> aActions;

  /**
   * The cached value of the '{@link #getCSConConstraints() <em>CS Con Constraints</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCSConConstraints()
   * @generated
   * @ordered
   */
  protected EList<CConsDecl> csConConstraints;

  /**
   * The cached value of the '{@link #getCSCoreBehavior() <em>CS Core Behavior</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCSCoreBehavior()
   * @generated
   * @ordered
   */
  protected EList<StochsticBehaviors> csCoreBehavior;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CSMembersDefintionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HSFDSLPackage.Literals.CS_MEMBERS_DEFINTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ProtDeclaration> getPorts()
  {
    if (ports == null)
    {
      ports = new EObjectContainmentEList<ProtDeclaration>(ProtDeclaration.class, this, HSFDSLPackage.CS_MEMBERS_DEFINTION__PORTS);
    }
    return ports;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AElementsBehaviorRoutines> getAActions()
  {
    if (aActions == null)
    {
      aActions = new EObjectContainmentEList<AElementsBehaviorRoutines>(AElementsBehaviorRoutines.class, this, HSFDSLPackage.CS_MEMBERS_DEFINTION__AACTIONS);
    }
    return aActions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<CConsDecl> getCSConConstraints()
  {
    if (csConConstraints == null)
    {
      csConConstraints = new EObjectContainmentEList<CConsDecl>(CConsDecl.class, this, HSFDSLPackage.CS_MEMBERS_DEFINTION__CS_CON_CONSTRAINTS);
    }
    return csConConstraints;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<StochsticBehaviors> getCSCoreBehavior()
  {
    if (csCoreBehavior == null)
    {
      csCoreBehavior = new EObjectContainmentEList<StochsticBehaviors>(StochsticBehaviors.class, this, HSFDSLPackage.CS_MEMBERS_DEFINTION__CS_CORE_BEHAVIOR);
    }
    return csCoreBehavior;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__PORTS:
        return ((InternalEList<?>)getPorts()).basicRemove(otherEnd, msgs);
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__AACTIONS:
        return ((InternalEList<?>)getAActions()).basicRemove(otherEnd, msgs);
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__CS_CON_CONSTRAINTS:
        return ((InternalEList<?>)getCSConConstraints()).basicRemove(otherEnd, msgs);
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__CS_CORE_BEHAVIOR:
        return ((InternalEList<?>)getCSCoreBehavior()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__PORTS:
        return getPorts();
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__AACTIONS:
        return getAActions();
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__CS_CON_CONSTRAINTS:
        return getCSConConstraints();
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__CS_CORE_BEHAVIOR:
        return getCSCoreBehavior();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__PORTS:
        getPorts().clear();
        getPorts().addAll((Collection<? extends ProtDeclaration>)newValue);
        return;
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__AACTIONS:
        getAActions().clear();
        getAActions().addAll((Collection<? extends AElementsBehaviorRoutines>)newValue);
        return;
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__CS_CON_CONSTRAINTS:
        getCSConConstraints().clear();
        getCSConConstraints().addAll((Collection<? extends CConsDecl>)newValue);
        return;
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__CS_CORE_BEHAVIOR:
        getCSCoreBehavior().clear();
        getCSCoreBehavior().addAll((Collection<? extends StochsticBehaviors>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__PORTS:
        getPorts().clear();
        return;
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__AACTIONS:
        getAActions().clear();
        return;
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__CS_CON_CONSTRAINTS:
        getCSConConstraints().clear();
        return;
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__CS_CORE_BEHAVIOR:
        getCSCoreBehavior().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__PORTS:
        return ports != null && !ports.isEmpty();
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__AACTIONS:
        return aActions != null && !aActions.isEmpty();
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__CS_CON_CONSTRAINTS:
        return csConConstraints != null && !csConConstraints.isEmpty();
      case HSFDSLPackage.CS_MEMBERS_DEFINTION__CS_CORE_BEHAVIOR:
        return csCoreBehavior != null && !csCoreBehavior.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //CSMembersDefintionImpl
