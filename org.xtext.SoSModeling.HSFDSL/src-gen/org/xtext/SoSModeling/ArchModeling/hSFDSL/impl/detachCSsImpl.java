/**
 * generated by Xtext 2.19.0
 */
package org.xtext.sosModeling.archModeling.hSFDSL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.sosModeling.archModeling.hSFDSL.Expression;
import org.xtext.sosModeling.archModeling.hSFDSL.HSFDSLPackage;
import org.xtext.sosModeling.archModeling.hSFDSL.detachCSs;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>detach CSs</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.detachCSsImpl#getDetachParam1 <em>Detach Param1</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.detachCSsImpl#getDetachParam2 <em>Detach Param2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class detachCSsImpl extends MinimalEObjectImpl.Container implements detachCSs
{
  /**
   * The cached value of the '{@link #getDetachParam1() <em>Detach Param1</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDetachParam1()
   * @generated
   * @ordered
   */
  protected EList<Expression> detachParam1;

  /**
   * The cached value of the '{@link #getDetachParam2() <em>Detach Param2</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDetachParam2()
   * @generated
   * @ordered
   */
  protected EList<Expression> detachParam2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected detachCSsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HSFDSLPackage.Literals.DETACH_CSS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Expression> getDetachParam1()
  {
    if (detachParam1 == null)
    {
      detachParam1 = new EObjectContainmentEList<Expression>(Expression.class, this, HSFDSLPackage.DETACH_CSS__DETACH_PARAM1);
    }
    return detachParam1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Expression> getDetachParam2()
  {
    if (detachParam2 == null)
    {
      detachParam2 = new EObjectContainmentEList<Expression>(Expression.class, this, HSFDSLPackage.DETACH_CSS__DETACH_PARAM2);
    }
    return detachParam2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case HSFDSLPackage.DETACH_CSS__DETACH_PARAM1:
        return ((InternalEList<?>)getDetachParam1()).basicRemove(otherEnd, msgs);
      case HSFDSLPackage.DETACH_CSS__DETACH_PARAM2:
        return ((InternalEList<?>)getDetachParam2()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HSFDSLPackage.DETACH_CSS__DETACH_PARAM1:
        return getDetachParam1();
      case HSFDSLPackage.DETACH_CSS__DETACH_PARAM2:
        return getDetachParam2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HSFDSLPackage.DETACH_CSS__DETACH_PARAM1:
        getDetachParam1().clear();
        getDetachParam1().addAll((Collection<? extends Expression>)newValue);
        return;
      case HSFDSLPackage.DETACH_CSS__DETACH_PARAM2:
        getDetachParam2().clear();
        getDetachParam2().addAll((Collection<? extends Expression>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.DETACH_CSS__DETACH_PARAM1:
        getDetachParam1().clear();
        return;
      case HSFDSLPackage.DETACH_CSS__DETACH_PARAM2:
        getDetachParam2().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.DETACH_CSS__DETACH_PARAM1:
        return detachParam1 != null && !detachParam1.isEmpty();
      case HSFDSLPackage.DETACH_CSS__DETACH_PARAM2:
        return detachParam2 != null && !detachParam2.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //detachCSsImpl
