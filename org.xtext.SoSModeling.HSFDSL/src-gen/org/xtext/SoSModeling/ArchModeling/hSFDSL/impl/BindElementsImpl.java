/**
 * generated by Xtext 2.19.0
 */
package org.xtext.sosModeling.archModeling.hSFDSL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.sosModeling.archModeling.hSFDSL.BindElements;
import org.xtext.sosModeling.archModeling.hSFDSL.Expression;
import org.xtext.sosModeling.archModeling.hSFDSL.HSFDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Bind Elements</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.BindElementsImpl#getBindParam1 <em>Bind Param1</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.BindElementsImpl#getBindParam2 <em>Bind Param2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BindElementsImpl extends MinimalEObjectImpl.Container implements BindElements
{
  /**
   * The cached value of the '{@link #getBindParam1() <em>Bind Param1</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBindParam1()
   * @generated
   * @ordered
   */
  protected EList<Expression> bindParam1;

  /**
   * The cached value of the '{@link #getBindParam2() <em>Bind Param2</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBindParam2()
   * @generated
   * @ordered
   */
  protected EList<Expression> bindParam2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BindElementsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HSFDSLPackage.Literals.BIND_ELEMENTS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Expression> getBindParam1()
  {
    if (bindParam1 == null)
    {
      bindParam1 = new EObjectContainmentEList<Expression>(Expression.class, this, HSFDSLPackage.BIND_ELEMENTS__BIND_PARAM1);
    }
    return bindParam1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Expression> getBindParam2()
  {
    if (bindParam2 == null)
    {
      bindParam2 = new EObjectContainmentEList<Expression>(Expression.class, this, HSFDSLPackage.BIND_ELEMENTS__BIND_PARAM2);
    }
    return bindParam2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case HSFDSLPackage.BIND_ELEMENTS__BIND_PARAM1:
        return ((InternalEList<?>)getBindParam1()).basicRemove(otherEnd, msgs);
      case HSFDSLPackage.BIND_ELEMENTS__BIND_PARAM2:
        return ((InternalEList<?>)getBindParam2()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HSFDSLPackage.BIND_ELEMENTS__BIND_PARAM1:
        return getBindParam1();
      case HSFDSLPackage.BIND_ELEMENTS__BIND_PARAM2:
        return getBindParam2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HSFDSLPackage.BIND_ELEMENTS__BIND_PARAM1:
        getBindParam1().clear();
        getBindParam1().addAll((Collection<? extends Expression>)newValue);
        return;
      case HSFDSLPackage.BIND_ELEMENTS__BIND_PARAM2:
        getBindParam2().clear();
        getBindParam2().addAll((Collection<? extends Expression>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.BIND_ELEMENTS__BIND_PARAM1:
        getBindParam1().clear();
        return;
      case HSFDSLPackage.BIND_ELEMENTS__BIND_PARAM2:
        getBindParam2().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.BIND_ELEMENTS__BIND_PARAM1:
        return bindParam1 != null && !bindParam1.isEmpty();
      case HSFDSLPackage.BIND_ELEMENTS__BIND_PARAM2:
        return bindParam2 != null && !bindParam2.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //BindElementsImpl
