/**
 * generated by Xtext 2.19.0
 */
package org.xtext.sosModeling.archModeling.hSFDSL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.sosModeling.archModeling.hSFDSL.AElementsBehaviorRoutines;
import org.xtext.sosModeling.archModeling.hSFDSL.HSFDSLPackage;
import org.xtext.sosModeling.archModeling.hSFDSL.StochsticBehaviors;
import org.xtext.sosModeling.archModeling.hSFDSL.formalParameters;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Stochstic Behaviors</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.StochsticBehaviorsImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.StochsticBehaviorsImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.StochsticBehaviorsImpl#getParamsDecl <em>Params Decl</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.StochsticBehaviorsImpl#getFunctions <em>Functions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StochsticBehaviorsImpl extends MinimalEObjectImpl.Container implements StochsticBehaviors
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getParamsDecl() <em>Params Decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParamsDecl()
   * @generated
   * @ordered
   */
  protected formalParameters paramsDecl;

  /**
   * The cached value of the '{@link #getFunctions() <em>Functions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctions()
   * @generated
   * @ordered
   */
  protected EList<AElementsBehaviorRoutines> functions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StochsticBehaviorsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HSFDSLPackage.Literals.STOCHSTIC_BEHAVIORS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HSFDSLPackage.STOCHSTIC_BEHAVIORS__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HSFDSLPackage.STOCHSTIC_BEHAVIORS__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public formalParameters getParamsDecl()
  {
    return paramsDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParamsDecl(formalParameters newParamsDecl, NotificationChain msgs)
  {
    formalParameters oldParamsDecl = paramsDecl;
    paramsDecl = newParamsDecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, HSFDSLPackage.STOCHSTIC_BEHAVIORS__PARAMS_DECL, oldParamsDecl, newParamsDecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParamsDecl(formalParameters newParamsDecl)
  {
    if (newParamsDecl != paramsDecl)
    {
      NotificationChain msgs = null;
      if (paramsDecl != null)
        msgs = ((InternalEObject)paramsDecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - HSFDSLPackage.STOCHSTIC_BEHAVIORS__PARAMS_DECL, null, msgs);
      if (newParamsDecl != null)
        msgs = ((InternalEObject)newParamsDecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - HSFDSLPackage.STOCHSTIC_BEHAVIORS__PARAMS_DECL, null, msgs);
      msgs = basicSetParamsDecl(newParamsDecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HSFDSLPackage.STOCHSTIC_BEHAVIORS__PARAMS_DECL, newParamsDecl, newParamsDecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AElementsBehaviorRoutines> getFunctions()
  {
    if (functions == null)
    {
      functions = new EObjectContainmentEList<AElementsBehaviorRoutines>(AElementsBehaviorRoutines.class, this, HSFDSLPackage.STOCHSTIC_BEHAVIORS__FUNCTIONS);
    }
    return functions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__PARAMS_DECL:
        return basicSetParamsDecl(null, msgs);
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__FUNCTIONS:
        return ((InternalEList<?>)getFunctions()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__TYPE:
        return getType();
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__NAME:
        return getName();
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__PARAMS_DECL:
        return getParamsDecl();
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__FUNCTIONS:
        return getFunctions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__TYPE:
        setType((String)newValue);
        return;
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__NAME:
        setName((String)newValue);
        return;
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__PARAMS_DECL:
        setParamsDecl((formalParameters)newValue);
        return;
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__FUNCTIONS:
        getFunctions().clear();
        getFunctions().addAll((Collection<? extends AElementsBehaviorRoutines>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__NAME:
        setName(NAME_EDEFAULT);
        return;
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__PARAMS_DECL:
        setParamsDecl((formalParameters)null);
        return;
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__FUNCTIONS:
        getFunctions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__PARAMS_DECL:
        return paramsDecl != null;
      case HSFDSLPackage.STOCHSTIC_BEHAVIORS__FUNCTIONS:
        return functions != null && !functions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //StochsticBehaviorsImpl
