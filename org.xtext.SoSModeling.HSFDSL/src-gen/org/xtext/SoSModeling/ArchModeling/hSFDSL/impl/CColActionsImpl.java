/**
 * generated by Xtext 2.19.0
 */
package org.xtext.sosModeling.archModeling.hSFDSL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.sosModeling.archModeling.hSFDSL.CColActions;
import org.xtext.sosModeling.archModeling.hSFDSL.HSFDSLPackage;
import org.xtext.sosModeling.archModeling.hSFDSL.formalParameters;
import org.xtext.sosModeling.archModeling.hSFDSL.functinality;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>CCol Actions</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.CColActionsImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.CColActionsImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.CColActionsImpl#getParamsDecl <em>Params Decl</em>}</li>
 *   <li>{@link org.xtext.sosModeling.archModeling.hSFDSL.impl.CColActionsImpl#getMethodBody <em>Method Body</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CColActionsImpl extends MinimalEObjectImpl.Container implements CColActions
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected EList<String> type;

  /**
   * The cached value of the '{@link #getParamsDecl() <em>Params Decl</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParamsDecl()
   * @generated
   * @ordered
   */
  protected EList<formalParameters> paramsDecl;

  /**
   * The cached value of the '{@link #getMethodBody() <em>Method Body</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethodBody()
   * @generated
   * @ordered
   */
  protected EList<functinality> methodBody;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CColActionsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HSFDSLPackage.Literals.CCOL_ACTIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HSFDSLPackage.CCOL_ACTIONS__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getType()
  {
    if (type == null)
    {
      type = new EDataTypeEList<String>(String.class, this, HSFDSLPackage.CCOL_ACTIONS__TYPE);
    }
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<formalParameters> getParamsDecl()
  {
    if (paramsDecl == null)
    {
      paramsDecl = new EObjectContainmentEList<formalParameters>(formalParameters.class, this, HSFDSLPackage.CCOL_ACTIONS__PARAMS_DECL);
    }
    return paramsDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<functinality> getMethodBody()
  {
    if (methodBody == null)
    {
      methodBody = new EObjectContainmentEList<functinality>(functinality.class, this, HSFDSLPackage.CCOL_ACTIONS__METHOD_BODY);
    }
    return methodBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case HSFDSLPackage.CCOL_ACTIONS__PARAMS_DECL:
        return ((InternalEList<?>)getParamsDecl()).basicRemove(otherEnd, msgs);
      case HSFDSLPackage.CCOL_ACTIONS__METHOD_BODY:
        return ((InternalEList<?>)getMethodBody()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HSFDSLPackage.CCOL_ACTIONS__NAME:
        return getName();
      case HSFDSLPackage.CCOL_ACTIONS__TYPE:
        return getType();
      case HSFDSLPackage.CCOL_ACTIONS__PARAMS_DECL:
        return getParamsDecl();
      case HSFDSLPackage.CCOL_ACTIONS__METHOD_BODY:
        return getMethodBody();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HSFDSLPackage.CCOL_ACTIONS__NAME:
        setName((String)newValue);
        return;
      case HSFDSLPackage.CCOL_ACTIONS__TYPE:
        getType().clear();
        getType().addAll((Collection<? extends String>)newValue);
        return;
      case HSFDSLPackage.CCOL_ACTIONS__PARAMS_DECL:
        getParamsDecl().clear();
        getParamsDecl().addAll((Collection<? extends formalParameters>)newValue);
        return;
      case HSFDSLPackage.CCOL_ACTIONS__METHOD_BODY:
        getMethodBody().clear();
        getMethodBody().addAll((Collection<? extends functinality>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.CCOL_ACTIONS__NAME:
        setName(NAME_EDEFAULT);
        return;
      case HSFDSLPackage.CCOL_ACTIONS__TYPE:
        getType().clear();
        return;
      case HSFDSLPackage.CCOL_ACTIONS__PARAMS_DECL:
        getParamsDecl().clear();
        return;
      case HSFDSLPackage.CCOL_ACTIONS__METHOD_BODY:
        getMethodBody().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HSFDSLPackage.CCOL_ACTIONS__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case HSFDSLPackage.CCOL_ACTIONS__TYPE:
        return type != null && !type.isEmpty();
      case HSFDSLPackage.CCOL_ACTIONS__PARAMS_DECL:
        return paramsDecl != null && !paramsDecl.isEmpty();
      case HSFDSLPackage.CCOL_ACTIONS__METHOD_BODY:
        return methodBody != null && !methodBody.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", type: ");
    result.append(type);
    result.append(')');
    return result.toString();
  }

} //CColActionsImpl
